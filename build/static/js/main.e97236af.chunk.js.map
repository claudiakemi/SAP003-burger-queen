{"version":3,"sources":["images/logo.png","components/Header/index.js","components/Button/index.js","App.js","serviceWorker.js","utils/firebaseUtils.js","pages/Chef/index.js","components/Input/index.js","pages/Waiter/index.js","pages/Ready/index.js","index.js"],"names":["module","exports","Header","src","logo","id","alt","Button","props","className","class","onClick","handleClick","name","App","to","ReactDOM","render","document","getElementById","Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","timestampsInSnapshots","firestore","Chef","useState","orders","setOrders","useEffect","collection","orderBy","get","then","querySnapshot","newOrders","docs","map","doc","data","orderStatus","table","client","time","order","item","quantity","option","extra","length","total","update","timestampReady","Date","getTime","reload","orderReady","Input","label","type","value","onChange","handleChange","extraArray","Waiter","menu","setMenu","filteredMenu","setFilteredMenu","setOrder","setClient","setTable","setTotal","setOption","setExtra","setOrderStatus","filterMenu","e","currentTarget","breakfast","filter","lunchDinner","selectOption","event","optionName","selectExtra","extraName","push","newMenu","img","price","elem","includes","current","options","reduce","itemIndex","deleteItem","preventDefault","add","timestamp","toLocaleString","alert","Ready","Math","floor","productionTime","orderDelivered","exact","path","component","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e97236af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.90578f51.png\";","import React from 'react';\nimport './styles.css';\nimport logo from '../../images/logo.png'\n\nconst Header = () => (\n  <img src={logo} id=\"logo\" alt=\"burger-logo\"/>\n);\n\nexport default Header;\n","import React from 'react';\nimport './styles.css';\n\nconst Button = (props) => (\n  <button id={props.id} className={props.class} onClick={props.handleClick}>\n  {props.name}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, BrowserRouter as Router, Link } from 'react-router-dom'\nimport './styles.css';\nimport Header from './components/Header';\nimport Button from './components/Button'\n\nfunction App() {\n  return (\n    <div id=\"all\">\n    <Header />\n    <hr id=\"line\"/>\n    <h2 id=\"work\">Selecione sua função:</h2>\n    <section id=\"buttons\">\n    <Link to='/pages/Waiter/index'><Button class=\"btn\" name=\"Garçom/Garçonete\"/></Link>\n    <Link to='/pages/Chef/index'><Button class=\"btn\" name=\"Cozinheiro(a)\"/></Link>\n    </section>\n    </div>\n  );\n}\n\nReactDOM.render(App, document.getElementById('root'));\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAYFnklriImQlD-Ha9yK37vRcPldoRsiOA\",\n  authDomain: \"burger-queen-592d4.firebaseapp.com\",\n  databaseURL: \"https://burger-queen-592d4.firebaseio.com\",\n  projectId: \"burger-queen-592d4\",\n  storageBucket: \"burger-queen-592d4.appspot.com\",\n  messagingSenderId: \"253644947255\",\n  appId: \"1:253644947255:web:a1123c834994ffd06664b2\",\n  measurementId: \"G-ZS3Q0JDGZT\",\n  timestampsInSnapshots: true\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n const firestore = firebase.firestore();\n //const settings = {/* your settings...*/ timestampsInSnapshots: true};\n //firestore.settings(settings);\n\nexport default firebase\n","import React, { useState, useEffect } from 'react';\nimport firebase from '../../utils/firebaseUtils';\nimport './styles.css';\nimport Header from '../../components/Header';\nimport Button from '../../components/Button';\nimport { Link } from \"react-router-dom\";\n\nfunction Chef () {\n  const [orders, setOrders] = useState([]);\n  const [orderStatus, setOrderStatus] = useState('Em preparo')\n\n  useEffect(() => {\n    firebase.firestore()\n    .collection('orders')\n    .orderBy('timestamp', 'asc')\n    .get()\n    .then(\n      querySnapshot => {\n        const newOrders = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data()}))\n          setOrders(newOrders)\n        }\n      )\n    },\n    []\n  );\n\nconst orderReady = (doc) => {\n  firebase.firestore()\n  .collection('orders')\n  .doc(doc.id)\n  .update({\n   orderStatus: 'Pronto',\n   timestampReady: new Date().getTime()\n  })\n  .then(() => {\n    window.location.reload();\n  }\n  )\n}\n\n  return(\n    <main id=\"all\">\n    <Header />\n    <hr id=\"line\"/>\n    <h1>Pedidos</h1>\n    <div>\n    {orders.map(doc => (\n      (doc.orderStatus === \"Em preparo\")?\n      <section id=\"chef-card\">\n      <p><strong>Mesa: {doc.table} - Cliente: {doc.client} - Horário: {doc.time}</strong></p>\n      <hr id=\"lines\"/>\n      {doc.order.map(item => (\n        <>\n        <p>{item.quantity} {item.name} </p>\n        <hr id=\"lines\"/>\n        </>\n      ))}\n      <div id=\"options-info\">\n      {(doc.option !== \"\")? <p id=\"option\">{doc.option}</p> : \"\"}\n      {(doc.extra.length !== 0)? <p id=\"extra\">{doc.extra}</p> : \"\"}\n      </div>\n      <p>Total: R${doc.total},00</p>\n      <Button id=\"pronto\" class=\"btn\" handleClick={() => orderReady(doc)} name=\"Pedido pronto\" />\n      </section>\n      : <></>\n    ))}\n    <Link to='/'><Button class=\"back\" name=\"Voltar\"/></Link>\n    </div>\n    </main>\n  )\n}\n\nexport default Chef\n","import React from 'react';\nimport './styles.css';\n\nconst Input = (props) => (\n  <>\n  <label>{props.label}</label>\n  <input type={props.type} id={props.id} value={props.value} name={props.name} onChange={props.handleChange}/>\n  </>\n);\n\nexport default Input\n","import React, { useState, useEffect } from 'react';\nimport firebase from '../../utils/firebaseUtils';\nimport './styles.css';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport Header from '../../components/Header';\nimport { Link } from \"react-router-dom\";\n\nlet extraArray = [];\n\nfunction Waiter () {\n  const [menu, setMenu] = useState([]);\n  const [filteredMenu,setFilteredMenu] = useState([]);\n  const [order, setOrder] = useState([]);\n  const [client, setClient] = useState('');\n  const [table, setTable] = useState('');\n  const [total, setTotal] = useState(0);\n  const [option, setOption] = useState('');\n  const [extra, setExtra] = useState([]);\n  const [orderStatus, setOrderStatus] = useState('Em preparo');\n\n  useEffect(() => {\n    firebase.firestore()\n    .collection('menu')\n    .get()\n    .then(\n      querySnapshot => {\n        const newMenu = querySnapshot.docs.map((doc) => ({\n          ...doc.data()}))\n          setMenu(newMenu)\n          setFilteredMenu(newMenu)\n        }\n      )\n    },\n    []\n  );\n\n  function filterMenu (e) {\n    const buttonId = e.currentTarget.id;\n    if (buttonId === \"breakfast\") {\n      const breakfast = menu.filter((item) => item.breakfast === true);\n      setFilteredMenu(breakfast)\n    } else {\n      const lunchDinner = menu.filter((item) => item.breakfast === false);\n      setFilteredMenu(lunchDinner)\n    }\n  }\n\n  function selectOption (event) {\n    const optionName = event.currentTarget.id;\n    setOption(optionName)\n  }\n\n  function selectExtra (event) {\n    const extraName = event.currentTarget.id;\n    let result = extraArray.push(extraName);\n    (extraArray.length === 1)? setTotal(total+(1)) : setTotal(total)\n    setExtra(extraName)\n  }\n\n  const addItem = (item) => {\n    if(order.includes(item)){\n      item.quantity += 1\n      setOrder([...order]);\n    } else {\n      item.quantity = 1;\n      setOrder(current => [...current, item])\n    }\n    setTotal(total + (item.price))\n  }\n\n  const subtractItem = (item) => {\n    if(item.quantity > 0){\n      item.quantity -= 1\n      setOrder([...order]);\n      setTotal(total - (item.price))\n    } else {\n      item.quantity = 0;\n      setOrder([...order])\n    }\n  }\n\n  function deleteItem (item) {\n    const itemIndex = order.filter(elem => elem !== item)\n    setOrder(itemIndex)\n    setTotal(total - (item.price*item.quantity))\n  }\n\n  return (\n    <main id=\"all-menu\">\n    <Header />\n    <hr id=\"line\"/>\n    <Link to='/pages/Ready/index'>\n    <Button class=\"btn\" name=\"Ver pedidos prontos para entrega\"/>\n    </Link>\n    <hr id=\"line\"/>\n    <h1 id=\"waiter\">Cardápio</h1>\n    <div>\n    <Button id=\"breakfast\" class=\"btn\" name=\"Café da manhã\" handleClick={filterMenu}/>\n    <Button id=\"lunch\" class=\"btn\" name=\"Almoço e Janta\" handleClick={filterMenu}/>\n    </div>\n    <section id=\"client-form\">\n    <Input type=\"text\" id=\"input\" label=\"Nome do cliente: \" value={client}\n    handleChange={e => setClient(e.currentTarget.value)}/>\n    <Input type=\"text\" id=\"input-table\" label=\"Nº da mesa: \" value={table}\n    handleChange={e => setTable(e.currentTarget.value)}/>\n    </section>\n    <ul id=\"items-list\">\n    {filteredMenu.map(doc => (\n      <section id=\"item-card\">\n      <figure id=\"img-box\">\n      <img id=\"photo\" src={doc.img}/>\n      </figure>\n      <article id=\"product-info\">\n      <h3>{doc.name}</h3>\n      <div id=\"quantity\">Quantidade:\n      <Button id=\"quant-btn\" name=\"-\" handleClick={() => subtractItem(doc)} />\n      { order.map(elem => (elem.name === doc.name && elem.quantity > 0)? elem.quantity : false)}\n      <Button id=\"quant-btn\" name=\"+\" handleClick={() => addItem(doc)} />\n      </div>\n      <section id=\"options\">\n      {doc.options.map(data => (\n        (data.length !== 0) ? <Button name={data} id={data} class=\"option-btn\" handleClick={selectOption}/> : \"\"\n      ))}\n      {doc.extra.map(data => (\n        (data.length !== 0) ? <Button name={data} id={data} class=\"extra-btn\" handleClick={selectExtra} /> : \"\"\n      ))}\n      </section>\n      <p>Preço: R${doc.price},00</p>\n      </article>\n      </section>\n    ))}\n    </ul>\n    <hr id=\"line\"/>\n    <section id=\"resume-card\">\n    <h1 id=\"resume\">Resumo do pedido</h1>\n    <p>Mesa: {table} - Cliente: {client}</p>\n    {order.map(doc => (\n      <section id=\"order-card\">\n      <p><strong>{doc.quantity} {doc.name}</strong></p>\n      {doc.options.reduce(data => (\n        (data.length !== 0)? <p>{option}</p> : \"\"\n      ))}\n      {doc.extra.reduce(data => (\n        (data.length !== 0)? <p>{extra}</p> : \"\"\n      ))}\n      <p>Preço: R${doc.price},00</p>\n      <Button id=\"delete-item\" handleClick={() => deleteItem(doc)} name=\"Deletar item\" />\n      <hr id=\"resume-line\"/>\n      </section>\n    ))}\n    <p>Total: R${total},00</p>\n    </section>\n    <Button class=\"btn\" handleClick={saveOrder} name=\"Enviar para preparo\"/>\n    <Link to='/'><Button class=\"back\" name=\"Voltar\"/></Link>\n    </main>\n  )\n\n  function saveOrder (e) {\n    e.preventDefault()\n    firebase.firestore()\n    .collection('orders')\n    .add({\n      order,\n      client,\n      table,\n      option,\n      extra,\n      total,\n      orderStatus,\n      timestamp: new Date().getTime(),\n      time:new Date().toLocaleString('pt-BR')\n    })\n    .then(() => {\n      setOrder([])\n      setClient('')\n      setTable('')\n      setOption('')\n      setExtra([])\n      setTotal(0)\n      setOrderStatus('Em preparo')\n      alert(\"Pedido enviado\")\n    })\n  }\n}\n\nexport default Waiter\n","import React, { useState, useEffect } from 'react';\nimport firebase from '../../utils/firebaseUtils';\nimport './styles.css';\nimport Header from '../../components/Header';\nimport Button from '../../components/Button';\nimport { Link } from \"react-router-dom\";\n\nfunction Ready() {\n  const [orders, setOrders] = useState([]);\n  const [orderStatus, setOrderStatus] = useState('Em preparo')\n\n  useEffect(() => {\n    firebase.firestore()\n    .collection('orders')\n    .orderBy('timestamp', 'asc')\n    .get()\n    .then(\n      querySnapshot => {\n        const newOrders = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data()}))\n          setOrders(newOrders)\n        }\n      )\n    },\n    []\n  );\n\n  const productionTime = (doc) => {\n    const timestamp = doc.timestampReady - doc.timestamp;\n    const hours = Math.floor(((timestamp / (1000*60*60)) % 24));\n    const minutes = Math.floor((timestamp / (1000*60)) % 60);\n    const seconds = Math.floor((timestamp / 1000) % 60 );\n    return hours + ':' + minutes + ':' +  seconds\n  }\n\n  const orderDelivered = (doc) => {\n    firebase.firestore()\n    .collection('orders')\n    .doc(doc.id)\n    .update({\n     orderStatus: 'Entregue'\n    })\n    .then(() =>\n     window.location.reload()\n    )\n  }\n\n  return (\n    <main id=\"all\">\n    <Header />\n    <hr id=\"line\"/>\n    <h1>Pedidos prontos para entrega</h1>\n    <div>\n    {orders.map(doc => (\n      (doc.orderStatus === \"Pronto\")?\n      <section id=\"chef-card\">\n      <p><strong>Mesa: {doc.table} - Cliente: {doc.client} - Tempo de espera: {productionTime(doc)}</strong></p>\n      <hr id=\"lines\"/>\n      {doc.order.map(item => (\n        <>\n        <p>{item.quantity} {item.name} </p>\n        <hr id=\"lines\"/>\n        </>\n      ))}\n      <div id=\"options-info\">\n      {(doc.option !== \"\")? <p id=\"option\">{doc.option}</p> : \"\"}\n      {(doc.extra.length !== 0)? <p id=\"extra\">{doc.extra}</p> : \"\"}\n      </div>\n      <p>Total: R${doc.total},00</p>\n      <Button id=\"entregue\" class=\"btn\" handleClick={() => orderDelivered(doc)} name=\"Pedido entregue\" />\n      </section>\n      : <></>\n    ))}\n    <Link to='/pages/Waiter/index'><Button class=\"back\" name=\"Voltar\"/></Link>\n    </div>\n    </main>\n  )\n}\n\nexport default Ready\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Chef from './pages/Chef/index';\nimport Waiter from './pages/Waiter/index';\nimport Ready from './pages/Ready/index';\n\nconst Routing = () => {\n  return (\n  <Router>\n    <Switch>\n      <div>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/pages/Waiter/index\" component={Waiter} />\n        <Route path=\"/pages/Chef/index\" component={Chef} />\n        <Route path=\"/pages/Ready/index\" component={Ready} />\n      </div>\n    </Switch>\n  </Router>\n  )\n}\n\nReactDOM.render(<Routing />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}