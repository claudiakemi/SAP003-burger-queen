{"ast":null,"code":"import _objectSpread from \"/home/ubuntu/SAP003-burger-queen/burger-queen/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/ubuntu/SAP003-burger-queen/burger-queen/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ubuntu/SAP003-burger-queen/burger-queen/src/pages/Waiter/index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport firebase from '../../utils/firebaseUtils';\nimport './styles.css';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport Header from '../../components/Header';\n\nfunction Waiter() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        menu = _useState2[0],\n        setMenu = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        order = _useState4[0],\n        setOrder = _useState4[1];\n\n  useEffect(() => {\n    firebase.firestore().collection('menu') //.where('breakfast', '==', 'true')\n    .get().then(querySnapshot => {\n      const newMenu = querySnapshot.docs.map(doc => _objectSpread({}, doc.data()));\n      setMenu(newMenu);\n    });\n  }, []);\n\n  const addItem = item => {\n    if (order.includes(item)) {\n      item.quantity += 1; //item.acum += item.price\n\n      setOrder([...order]);\n    } else {\n      item.quantity = 1;\n      setOrder(current => [...current, item]);\n    }\n  };\n\n  const subtractItem = item => {\n    if (order.includes(item)) {\n      item.quantity -= 1; //item.acum += item.price\n\n      setOrder([...order]);\n    } else {\n      item.quantity = 1;\n      setOrder(current => [...current, item]);\n    }\n  };\n\n  return React.createElement(\"section\", {\n    id: \"all-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    id: \"waiter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Card\\xE1pio\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    id: \"btn\",\n    name: \"Caf\\xE9 da manh\\xE3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Button, {\n    id: \"btn\",\n    name: \"Almo\\xE7o e Janta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(Input, {\n    label: \"Nome do cliente: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    id: \"items-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, menu.map(doc => React.createElement(\"section\", {\n    id: \"item-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    key: doc.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, doc.name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Quantidade:\", React.createElement(Button, {\n    id: \"quant-btn\",\n    name: \"-\",\n    handleClick: () => subtractItem(doc),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), order.map(elem => elem.name === doc.name ? elem.quantity : false), React.createElement(Button, {\n    id: \"quant-btn\",\n    name: \"+\",\n    handleClick: () => addItem(doc),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Pre\\xE7o: R$\", doc.price, \",00\")))), React.createElement(Button, {\n    id: \"btn\" //handleClick={saveOrder}\n    ,\n    name: \"Salvar pedido\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        saveOrder = _useState6[0],\n        setSaveOrder = _useState6[1];\n\n  const meal = item => {\n    setSaveOrder([...saveOrder, item]);\n    const nameInput = useRef();\n    const tableInput = useRef();\n\n    const submit = () => {\n      const clientName = nameInput.current.value;\n      const table = tableInput.current.value;\n      firebase.firestore().collection('orders').add({\n        meal,\n        clientName,\n        table\n      });\n    };\n  }; // return (\n  //   <section id=\"order\">\n  //   <h1 id=\"waiter\">Resumo do pedido</h1>\n  //   <ul id=\"order-list\">\n  //     {order.map(doc => (\n  //       <section id=\"order-card\">\n  //       <p>{order.id}</p>\n  //       <p>{doc.table}</p>\n  //       <p>{doc.client}</p>\n  //       <p>Total: R${doc.price},00</p>\n  //       </section>\n  //     ))}\n  //   </ul>\n  //   </section>\n  // )\n\n}\n\nexport default Waiter;","map":{"version":3,"sources":["/home/ubuntu/SAP003-burger-queen/burger-queen/src/pages/Waiter/index.js"],"names":["React","useState","useEffect","useRef","firebase","Input","Button","Header","Waiter","menu","setMenu","order","setOrder","firestore","collection","get","then","querySnapshot","newMenu","docs","map","doc","data","addItem","item","includes","quantity","current","subtractItem","id","name","elem","price","saveOrder","setSaveOrder","meal","nameInput","tableInput","submit","clientName","value","table","add"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport firebase from '../../utils/firebaseUtils';\nimport './styles.css';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport Header from '../../components/Header';\n\nfunction Waiter () {\n  const [menu, setMenu] = useState([]);\n  const [order, setOrder] = useState([]);\n\n\n  useEffect(() => {\n    firebase.firestore()\n    .collection('menu')\n    //.where('breakfast', '==', 'true')\n    .get()\n    .then(\n      querySnapshot => {\n      const newMenu = querySnapshot.docs.map((doc) => ({\n      ...doc.data()}))\n      setMenu(newMenu)\n    }\n  )\n  },\n  []\n);\n\nconst addItem = (item) => {\n  if(order.includes(item)){\n    item.quantity += 1\n    //item.acum += item.price\n    setOrder([...order]);\n  } else {\n    item.quantity = 1;\n    setOrder(current => [...current, item])\n  }\n}\n\nconst subtractItem = (item) => {\n  if(order.includes(item)){\n    item.quantity -= 1\n    //item.acum += item.price\n    setOrder([...order]);\n  } else {\n    item.quantity = 1;\n    setOrder(current => [...current, item])\n  }\n}\n\n  return (\n    <section id=\"all-menu\">\n      <Header />\n      <h1 id=\"waiter\">Cardápio</h1>\n      <div>\n        <Button id=\"btn\" name=\"Café da manhã\" />\n        <Button id=\"btn\" name=\"Almoço e Janta\" />\n      </div>\n      <Input label=\"Nome do cliente: \" />\n      <ul id=\"items-list\">\n      {menu.map(doc => (\n        <section id=\"item-card\">\n          <p key={doc.id}></p>\n          <h3>{doc.name}</h3>\n          <div>Quantidade:\n          <Button id=\"quant-btn\" name=\"-\" handleClick={() => subtractItem(doc)} />\n          {order.map(elem => elem.name === doc.name? elem.quantity : false)}\n          <Button id=\"quant-btn\" name=\"+\" handleClick={() => addItem(doc)} />\n        </div>\n        <p>Preço: R${doc.price},00</p>\n      </section>\n    ))}\n    </ul>\n\n    <Button id=\"btn\"\n    //handleClick={saveOrder}\n    name=\"Salvar pedido\"/>\n</section>\n  )\n\n  const [saveOrder, setSaveOrder] = useState([]);\n  const meal = (item) => {\n    setSaveOrder([...saveOrder, item])\n    const nameInput = useRef();\n    const tableInput = useRef();\n    const submit = () => {\n      const clientName = nameInput.current.value;\n      const table = tableInput.current.value;\n\n      firebase.firestore()\n          .collection('orders')\n          .add({\n            meal,\n            clientName,\n            table\n          })\n    }\n  }\n\n\n  // return (\n  //   <section id=\"order\">\n  //   <h1 id=\"waiter\">Resumo do pedido</h1>\n  //   <ul id=\"order-list\">\n  //     {order.map(doc => (\n  //       <section id=\"order-card\">\n  //       <p>{order.id}</p>\n  //       <p>{doc.table}</p>\n  //       <p>{doc.client}</p>\n  //       <p>Total: R${doc.price},00</p>\n  //       </section>\n  //     ))}\n  //   </ul>\n  //   </section>\n  // )\n  }\n\n\n\n\nexport default Waiter\n"]},"metadata":{},"sourceType":"module"}